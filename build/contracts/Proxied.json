{
  "contractName": "Proxied",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "masterCopy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060e38061001f6000396000f3fe6080604052348015600f57600080fd5b50600436106045576000357c010000000000000000000000000000000000000000000000000000000090048063a619486e14604a575b600080fd5b60506092565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820458a0c1388624cd7cfc0ac5bea5d667a9ee41ec435b3db73372afa6dbf4d41f40029",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b50600436106045576000357c010000000000000000000000000000000000000000000000000000000090048063a619486e14604a575b600080fd5b60506092565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820458a0c1388624cd7cfc0ac5bea5d667a9ee41ec435b3db73372afa6dbf4d41f40029",
  "sourceMap": "173:51:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:51:15;;;;;;;",
  "deployedSourceMap": "173:51:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:51:15;;;;;;;;;;;;;;;;;;;;196:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\n/// @title Proxied - indicates that a contract will be proxied. Also defines storage requirements for Proxy.\n/// @author Alan Lu - <alan@gnosis.pm>\ncontract Proxied {\n    address public masterCopy;\n}\n\n/// @title Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n/// @author Stefan George - <stefan@gnosis.pm>\ncontract Proxy is Proxied {\n    /// @dev Constructor function sets address of master copy contract.\n    /// @param _masterCopy Master copy address.\n    constructor(address _masterCopy) public {\n        require(_masterCopy != address(0), \"The master copy is required\");\n        masterCopy = _masterCopy;\n    }\n\n    /// @dev Fallback function forwards all transactions and returns all received return data.\n    function() external payable {\n        address _masterCopy = masterCopy;\n        assembly {\n            calldatacopy(0, 0, calldatasize)\n            let success := delegatecall(not(0), _masterCopy, 0, calldatasize, 0, 0)\n            returndatacopy(0, 0, returndatasize)\n            switch success\n                case 0 {\n                    revert(0, returndatasize)\n                }\n                default {\n                    return(0, returndatasize)\n                }\n        }\n    }\n}\n",
  "sourcePath": "/Users/billy/gnosis/arbitrage/node_modules/@gnosis.pm/util-contracts/contracts/Proxy.sol",
  "ast": {
    "absolutePath": "/Users/billy/gnosis/arbitrage/node_modules/@gnosis.pm/util-contracts/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxied": [
        4056
      ],
      "Proxy": [
        4087
      ]
    },
    "id": 4088,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4053,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Proxied - indicates that a contract will be proxied. Also defines storage requirements for Proxy.\n @author Alan Lu - <alan@gnosis.pm>",
        "fullyImplemented": true,
        "id": 4056,
        "linearizedBaseContracts": [
          4056
        ],
        "name": "Proxied",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4055,
            "name": "masterCopy",
            "nodeType": "VariableDeclaration",
            "scope": 4056,
            "src": "196:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4054,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          }
        ],
        "scope": 4088,
        "src": "173:51:15"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4057,
              "name": "Proxied",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4056,
              "src": "408:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxied_$4056",
                "typeString": "contract Proxied"
              }
            },
            "id": 4058,
            "nodeType": "InheritanceSpecifier",
            "src": "408:7:15"
          }
        ],
        "contractDependencies": [
          4056
        ],
        "contractKind": "contract",
        "documentation": "@title Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.pm>",
        "fullyImplemented": true,
        "id": 4087,
        "linearizedBaseContracts": [
          4087,
          4056
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4076,
              "nodeType": "Block",
              "src": "582:116:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4064,
                          "name": "_masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4060,
                          "src": "600:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "623:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "615:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "615:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "600:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d617374657220636f7079206973207265717569726564",
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:29:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e9921edd8141a51172691d5d51dd1cbeb601d8d4953527c9d36e0bffd20fed9",
                          "typeString": "literal_string \"The master copy is required\""
                        },
                        "value": "The master copy is required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e9921edd8141a51172691d5d51dd1cbeb601d8d4953527c9d36e0bffd20fed9",
                          "typeString": "literal_string \"The master copy is required\""
                        }
                      ],
                      "id": 4063,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4283,
                        4284
                      ],
                      "referencedDeclaration": 4284,
                      "src": "592:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:65:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4071,
                  "nodeType": "ExpressionStatement",
                  "src": "592:65:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4072,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4055,
                      "src": "667:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4073,
                      "name": "_masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4060,
                      "src": "680:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "667:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "667:24:15"
                }
              ]
            },
            "documentation": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address.",
            "id": 4077,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4060,
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 4077,
                  "src": "554:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:21:15"
            },
            "returnParameters": {
              "id": 4062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:15"
            },
            "scope": 4087,
            "src": "542:156:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4085,
              "nodeType": "Block",
              "src": "827:462:15",
              "statements": [
                {
                  "assignments": [
                    4081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4081,
                      "name": "_masterCopy",
                      "nodeType": "VariableDeclaration",
                      "scope": 4085,
                      "src": "837:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4080,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "837:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4083,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 4082,
                    "name": "masterCopy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4055,
                    "src": "859:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "837:32:15"
                },
                {
                  "externalReferences": [
                    {
                      "_masterCopy": {
                        "declaration": 4081,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "983:11:15",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4084,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    calldatacopy(0, 0, calldatasize())\n    let success := delegatecall(not(0), _masterCopy, 0, calldatasize(), 0, 0)\n    returndatacopy(0, 0, returndatasize())\n    switch success\n    case 0 {\n        revert(0, returndatasize())\n    }\n    default {\n        return(0, returndatasize())\n    }\n}",
                  "src": "879:410:15"
                }
              ]
            },
            "documentation": "@dev Fallback function forwards all transactions and returns all received return data.",
            "id": 4086,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:2:15"
            },
            "returnParameters": {
              "id": 4079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:0:15"
            },
            "scope": 4087,
            "src": "799:490:15",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4088,
        "src": "390:901:15"
      }
    ],
    "src": "0:1292:15"
  },
  "legacyAST": {
    "absolutePath": "/Users/billy/gnosis/arbitrage/node_modules/@gnosis.pm/util-contracts/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxied": [
        4056
      ],
      "Proxy": [
        4087
      ]
    },
    "id": 4088,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4053,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Proxied - indicates that a contract will be proxied. Also defines storage requirements for Proxy.\n @author Alan Lu - <alan@gnosis.pm>",
        "fullyImplemented": true,
        "id": 4056,
        "linearizedBaseContracts": [
          4056
        ],
        "name": "Proxied",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4055,
            "name": "masterCopy",
            "nodeType": "VariableDeclaration",
            "scope": 4056,
            "src": "196:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4054,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          }
        ],
        "scope": 4088,
        "src": "173:51:15"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4057,
              "name": "Proxied",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4056,
              "src": "408:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxied_$4056",
                "typeString": "contract Proxied"
              }
            },
            "id": 4058,
            "nodeType": "InheritanceSpecifier",
            "src": "408:7:15"
          }
        ],
        "contractDependencies": [
          4056
        ],
        "contractKind": "contract",
        "documentation": "@title Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.pm>",
        "fullyImplemented": true,
        "id": 4087,
        "linearizedBaseContracts": [
          4087,
          4056
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4076,
              "nodeType": "Block",
              "src": "582:116:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4064,
                          "name": "_masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4060,
                          "src": "600:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "623:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "615:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "615:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "600:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d617374657220636f7079206973207265717569726564",
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:29:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e9921edd8141a51172691d5d51dd1cbeb601d8d4953527c9d36e0bffd20fed9",
                          "typeString": "literal_string \"The master copy is required\""
                        },
                        "value": "The master copy is required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e9921edd8141a51172691d5d51dd1cbeb601d8d4953527c9d36e0bffd20fed9",
                          "typeString": "literal_string \"The master copy is required\""
                        }
                      ],
                      "id": 4063,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4283,
                        4284
                      ],
                      "referencedDeclaration": 4284,
                      "src": "592:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:65:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4071,
                  "nodeType": "ExpressionStatement",
                  "src": "592:65:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4072,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4055,
                      "src": "667:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4073,
                      "name": "_masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4060,
                      "src": "680:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "667:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "667:24:15"
                }
              ]
            },
            "documentation": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address.",
            "id": 4077,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4060,
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 4077,
                  "src": "554:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:21:15"
            },
            "returnParameters": {
              "id": 4062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:15"
            },
            "scope": 4087,
            "src": "542:156:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4085,
              "nodeType": "Block",
              "src": "827:462:15",
              "statements": [
                {
                  "assignments": [
                    4081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4081,
                      "name": "_masterCopy",
                      "nodeType": "VariableDeclaration",
                      "scope": 4085,
                      "src": "837:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4080,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "837:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4083,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 4082,
                    "name": "masterCopy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4055,
                    "src": "859:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "837:32:15"
                },
                {
                  "externalReferences": [
                    {
                      "_masterCopy": {
                        "declaration": 4081,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "983:11:15",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4084,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    calldatacopy(0, 0, calldatasize())\n    let success := delegatecall(not(0), _masterCopy, 0, calldatasize(), 0, 0)\n    returndatacopy(0, 0, returndatasize())\n    switch success\n    case 0 {\n        revert(0, returndatasize())\n    }\n    default {\n        return(0, returndatasize())\n    }\n}",
                  "src": "879:410:15"
                }
              ]
            },
            "documentation": "@dev Fallback function forwards all transactions and returns all received return data.",
            "id": 4086,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:2:15"
            },
            "returnParameters": {
              "id": 4079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:0:15"
            },
            "scope": 4087,
            "src": "799:490:15",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4088,
        "src": "390:901:15"
      }
    ],
    "src": "0:1292:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-26T11:34:05.204Z",
  "devdoc": {
    "author": "Alan Lu - <alan@gnosis.pm>",
    "methods": {},
    "title": "Proxied - indicates that a contract will be proxied. Also defines storage requirements for Proxy."
  },
  "userdoc": {
    "methods": {}
  }
}